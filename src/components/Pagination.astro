---
import type { Page } from "astro";
import { useTranslations } from "@/hooks/use-translations";
import { getLangFromUrl } from "@/utils/get-lang-from-url";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

interface Props {
  page: Page<any>;
}

const { page } = Astro.props;

const hasPreviousPage = page.url.prev;
const hasNextPage = page.url.next;
const currentPage = page.currentPage;

const url = Astro.url;
---

<nav
  aria-label={t("label.pagination")}
  class="flex justify-center items-center space-x-4 mt-8"
>
  {
    hasPreviousPage ? (
      <a
        href={`/${url}/${currentPage - 1}`}
        class="transition-all duration-300 ease-in-out flex items-center justify-center px-6 py-2 h-10 rounded-full border border-border bg-background hover:bg-offset hover:shadow-lg"
      >
        {t("label.previous")}
      </a>
    ) : (
      <span
        class="transition-all duration-300 ease-in-out flex items-center justify-center px-6 py-2 h-10 rounded-full border cursor-not-allowed text-offset bg-offset"
        aria-disabled="true"
      >
        {t("label.previous")}
      </span>
    )
  }

  <span class="flex items-center justify-center px-6 py-2 h-10 rounded-full">
    {currentPage}
  </span>

  {
    hasNextPage ? (
      <a
        href={`/${url}/${currentPage + 1}`}
        class="transition-all duration-300 ease-in-out flex items-center justify-center px-6 py-2 h-10 rounded-full border border-border bg-background hover:bg-offset hover:shadow-lg"
      >
        {t("label.next")}
      </a>
    ) : (
      <span
        class="transition-all duration-300 ease-in-out flex items-center justify-center px-6 py-2 h-10 rounded-full border cursor-not-allowed text-offset bg-offset"
        aria-disabled="true"
      >
        {t("label.next")}
      </span>
    )
  }
</nav>
